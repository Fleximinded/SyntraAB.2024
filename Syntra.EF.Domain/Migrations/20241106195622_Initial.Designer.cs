// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Syntra.EF.Domain;

#nullable disable

namespace Syntra.EF.Domain.Migrations
{
    [DbContext(typeof(TimeRegistrationContext))]
    [Migration("20241106195622_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Syntra.EF.Data.Models.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vat")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("GenderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("NickName")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.TaskDescription", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HourPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TaskDescriptions");

                    b.HasData(
                        new
                        {
                            Id = "3ea3b2bbdbaa4b97af58e7cc62b46f4d",
                            Description = "Fun with HTML and so",
                            HourPrice = 85m,
                            Name = "Web design"
                        },
                        new
                        {
                            Id = "5b4101cbf38e47409f414996e2ad45b6",
                            Description = "Fun with C# and so",
                            HourPrice = 95m,
                            Name = "Web development"
                        },
                        new
                        {
                            Id = "8bb065659acf49878f4a1a2c496a6506",
                            Description = "No fun at all...",
                            HourPrice = 280m,
                            Name = "Writing documentation"
                        });
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.TimeRegistration", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientInfoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClientInfoId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TimeRegistrations");
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.Employee", b =>
                {
                    b.HasBaseType("Syntra.EF.Data.Models.Person");

                    b.Property<string>("EmployeeNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = "ebe1a3392e65415782e2e320b1afd058",
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            GenderId = 3,
                            LastName = "Doe",
                            EmployeeNumber = "123",
                            HireDate = new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "30d172efd236406baf16e6eb6c3eefd2",
                            BirthDate = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jane",
                            GenderId = 3,
                            LastName = "Doe",
                            EmployeeNumber = "124",
                            HireDate = new DateTime(2011, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.Client", b =>
                {
                    b.HasOne("Syntra.EF.Data.Models.Person", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.TimeRegistration", b =>
                {
                    b.HasOne("Syntra.EF.Data.Models.Client", "ClientInfo")
                        .WithMany()
                        .HasForeignKey("ClientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Syntra.EF.Data.Models.TaskDescription", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Syntra.EF.Data.Models.Employee", null)
                        .WithMany("TimeRegistrations")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("ClientInfo");

                    b.Navigation("Description");
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.Employee", b =>
                {
                    b.HasOne("Syntra.EF.Data.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("Syntra.EF.Data.Models.Employee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Syntra.EF.Data.Models.Employee", b =>
                {
                    b.Navigation("TimeRegistrations");
                });
#pragma warning restore 612, 618
        }
    }
}
